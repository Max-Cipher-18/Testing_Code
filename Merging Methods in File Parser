private void readFileAndProcess(String filePath, Map<String, Optional<List<TCPConnectivityData>>> dataMap) throws IOException {
    try (BufferedReader reader = Files.newBufferedReader(Paths.get(filePath))) {
        String line;
        while ((line = reader.readLine()) != null) {
            processLine(line, dataMap);
        }
    }
}

private void processLine(String line, Map<String, Optional<List<TCPConnectivityData>>> dataMap) {
    String[] parts = line.split(";");
    String host = parts[0];
    String ruleId = parts[1].split("_")[3];
    String message = parts[5];
    String timeStamp = parts[3];

    if ("TCPConnectivity".equals(parts[1].split("_")[0])) {
        dataMap.compute(host, (key, existingValue) -> {
            List<TCPConnectivityData> dataList = existingValue.orElse(new ArrayList<>());

            TCPConnectivityData data = new TCPConnectivityData();
            data.setRuleId(ruleId);
            data.setMessage(message);
            data.setTimeStamp(timeStamp);

            dataList.add(data);

            return Optional.of(dataList);
        });
    } else {
        // If no TCPConnectivity entry, store Optional.empty()
        dataMap.putIfAbsent(host, Optional.empty());
    }
}


